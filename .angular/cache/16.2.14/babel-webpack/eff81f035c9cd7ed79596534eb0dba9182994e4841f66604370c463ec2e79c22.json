{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst AUTH_API = 'http://localhost:8080/auth';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(username, password) {\n    return this.http.post(AUTH_API + '/signin', {\n      username,\n      password\n    }, httpOptions);\n  }\n  register(username, email, password) {\n    return this.http.post(AUTH_API + '/register', {\n      username,\n      email,\n      password\n    }, httpOptions);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","AUTH_API","httpOptions","headers","AuthService","constructor","http","login","username","password","post","register","email","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["F:\\Project\\GrossaryProject\\ecommerce-application\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nconst AUTH_API = 'http://localhost:8080/auth';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    login(username: string, password: string): Observable<any> {\r\n        return this.http.post(AUTH_API + '/signin', {\r\n            username,\r\n            password\r\n        }, httpOptions);\r\n    }\r\n\r\n    register(username: string, email: string, password: string): Observable<any> {\r\n        return this.http.post(AUTH_API + '/register', {\r\n            username,\r\n            email,\r\n            password\r\n        }, httpOptions);\r\n    }\r\n}"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAI9D,MAAMC,QAAQ,GAAG,4BAA4B;AAE7C,MAAMC,WAAW,GAAG;EAChBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAClE;AAKD,OAAM,MAAOI,WAAW;EACpBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACpC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAACT,QAAQ,GAAG,SAAS,EAAE;MACxCO,QAAQ;MACRC;KACH,EAAEP,WAAW,CAAC;EACnB;EAEAS,QAAQA,CAACH,QAAgB,EAAEI,KAAa,EAAEH,QAAgB;IACtD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAACT,QAAQ,GAAG,WAAW,EAAE;MAC1CO,QAAQ;MACRI,KAAK;MACLH;KACH,EAAEP,WAAW,CAAC;EACnB;EAAC,QAAAW,CAAA,G;qBAhBQT,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXd,WAAW;IAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;IAAAC,UAAA,EAFR;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}